<h1 id="цель-работы">Цель работы</h1>
<p>Целью данной работы является приобретение практических навыков
установки операционной системы на виртуальную машину, настройки ми-
нимально необходимых для дальнейшей работы сервисов.</p>
<h1 id="задание">Задание</h1>
<p>Лабораторная работа подразумевает установку на виртуальную машину
VirtualBox (https://www.virtualbox.org/) операционной системы Linux
(дистрибутив Rocky (https://rockylinux.org/) или CentOS (https://
www.centos.org/)).</p>
<h1 id="выполнение-лабораторной-работы">Выполнение лабораторной
работы</h1>
<p>Запускаю терминал. Перехожу в каталог /var/tmp. Провожу установку и
конфигурацию операционной системы. Запускаю виртуальную машину. (рис.
1).</p>
<figure id="fig:001">
<img src="image/1.jpg" style="width:70.0%"
alt="Окно создания виртуальной машины" />
<figcaption aria-hidden="true">Окно создания виртуальной
машины</figcaption>
</figure>
<p>Проверяю в свойствах VirtualBox месторасположение каталога для
виртуальных машин. (рис. 2).</p>
<figure id="fig:002">
<img src="image/2.jpg" style="width:70.0%" alt="Окно выбора имени" />
<figcaption aria-hidden="true">Окно выбора имени</figcaption>
</figure>
<p>Указываю имя виртуальной машины (мой логин в дисплейном классе), а
также тип операционной системы — Linux (рис. 3).</p>
<figure id="fig:003">
<img src="image/3.jpg" style="width:70.0%"
alt="Окно выбора основных характеристик для гостевой ОС" />
<figcaption aria-hidden="true">Окно выбора основных характеристик для
гостевой ОС</figcaption>
</figure>
<p>Выставляю основной памяти размер 2048 Мб, выбираю 1 процессор (рис.
4).</p>
<figure id="fig:004">
<img src="image/4.jpg" style="width:70.0%"
alt="Окно выбора основных характеристик для гостевой ОС" />
<figcaption aria-hidden="true">Окно выбора основных характеристик для
гостевой ОС</figcaption>
</figure>
<p>Выделаю 40 Гб памяти на виртуальном жестком диске (рис. 5).</p>
<figure id="fig:005">
<img src="image/5.jpg" style="width:70.0%"
alt="Окно выбора объема памяти" />
<figcaption aria-hidden="true">Окно выбора объема памяти</figcaption>
</figure>
<p>Выбираю в VirtualBox «Свойства», затем «Носители» виртуальной машины.
Добавляю новый привод оптических дисков. (рис. 6).</p>
<figure id="fig:006">
<img src="image/6.jpg" style="width:70.0%"
alt="Выбор оптического диска Rocky" />
<figcaption aria-hidden="true">Выбор оптического диска
Rocky</figcaption>
</figure>
<p>Запускаю виртуальную машину (рис. 7).</p>
<figure id="fig:007">
<img src="image/7.jpg" style="width:70.0%" alt="Запуск" />
<figcaption aria-hidden="true">Запуск</figcaption>
</figure>
<p>Выбираю язык установки (рис. 8).</p>
<figure id="fig:008">
<img src="image/8.jpg" style="width:70.0%"
alt="Выбор языка установки" />
<figcaption aria-hidden="true">Выбор языка установки</figcaption>
</figure>
<p>В обзоре установки будем проверять все настройки и менять на нужные
(рис. 9).</p>
<figure id="fig:009">
<img src="image/9.jpg" style="width:70.0%" alt="Окно настроек" />
<figcaption aria-hidden="true">Окно настроек</figcaption>
</figure>
<p>Язык раскладки должен быть русский (рис. 10).</p>
<figure id="fig:010">
<img src="image/10.jpg" style="width:70.0%" alt="Выбор раскладки" />
<figcaption aria-hidden="true">Выбор раскладки</figcaption>
</figure>
<p>Часовой пояс поменяла на московское время. Установила пароль для
администратора. Для пользователя так же сделала пароль и сделала этого
пользователя администратором .</p>
<p>В соответствии с требованием лабораторной работы выбираю окружение
сервер с GUB и средства разработки в дополнительном программном
обеспечении (рис. 11).</p>
<figure id="fig:011">
<img src="image/11.jpg" style="width:70.0%" alt="Выбор окружения" />
<figcaption aria-hidden="true">Выбор окружения</figcaption>
</figure>
<p>Отключаю kdump (рис. 12).</p>
<figure id="fig:012">
<img src="image/12.jpg" style="width:70.0%" alt="Отключение kdump" />
<figcaption aria-hidden="true">Отключение kdump</figcaption>
</figure>
<p>Проверяю сеть, указываю имя узла в соответствии с соглашением об
именовании (рис. 13).</p>
<figure id="fig:013">
<img src="image/13.jpg" style="width:70.0%" alt="Выбор сети" />
<figcaption aria-hidden="true">Выбор сети</figcaption>
</figure>
<p>Начало установки (рис. 14).</p>
<figure id="fig:014">
<img src="image/15.jpg" style="width:70.0%" alt="Установка" />
<figcaption aria-hidden="true">Установка</figcaption>
</figure>
<p>После заврешения установки образ диска сам пропадет из носителей.
После установки при запуске операционной системы появляется окно выбора
пользователя.</p>
<h1 id="выполнение-дополнительного-задания">Выполнение дополнительного
задания</h1>
<p>Открываю терминал, в нем прописываю dmesg | less (рис. 15).</p>
<figure id="fig:015">
<img src="image/17.jpg" style="width:70.0%" alt="Окно терминала" />
<figcaption aria-hidden="true">Окно терминала</figcaption>
</figure>
<p>Версия ядра 5.14.0-284.11.1.el9_2.x86_64 (рис. 16).</p>
<figure id="fig:016">
<img src="image/18.jpg" style="width:70.0%" alt="Версия ядра" />
<figcaption aria-hidden="true">Версия ядра</figcaption>
</figure>
<p>Частота процессора 1704 МГц (рис. 17).</p>
<figure id="fig:017">
<img src="image/19.jpg" style="width:70.0%" alt="Частота процессора" />
<figcaption aria-hidden="true">Частота процессора</figcaption>
</figure>
<p>Модель процессора Intel Core i5-8400T (рис. 18).</p>
<figure id="fig:018">
<img src="image/20.jpg" style="width:70.0%" alt="Модель процессора" />
<figcaption aria-hidden="true">Модель процессора</figcaption>
</figure>
<p>Доступно 213688 Кб из 2096696 Кб (рис. 19).</p>
<figure id="fig:019">
<img src="image/21.jpg" style="width:70.0%"
alt="Объем доступной оперативной памяти" />
<figcaption aria-hidden="true">Объем доступной оперативной
памяти</figcaption>
</figure>
<p>Обнаруженный гипервизор типа KVM (рис. 20).</p>
<figure id="fig:020">
<img src="image/22.jpg" style="width:70.0%"
alt="Тип обнаруженного гипервизора" />
<figcaption aria-hidden="true">Тип обнаруженного
гипервизора</figcaption>
</figure>
<p>sudo fdish -l показывает тип файловой системы, типа Linux, Linux LVM
(рис. 21).</p>
<figure id="fig:021">
<img src="image/23.jpg" style="width:70.0%"
alt="Тип файловой системы" />
<figcaption aria-hidden="true">Тип файловой системы</figcaption>
</figure>
<p>Далее показана последовательно монтирования файловых систем (рис.
22).</p>
<figure id="fig:022">
<img src="image/24.jpg" style="width:70.0%"
alt="Последовательность монтирования файловых систем" />
<figcaption aria-hidden="true">Последовательность монтирования файловых
систем</figcaption>
</figure>
<h1 id="выводы">Выводы</h1>
<p>Я приобрела практические навыки установки операционной системы на
виртуальную машину, настройки минимально необходимых для дальнейшей
работы сервисов.</p>
<h1 id="контрольные-вопросы">Контрольные вопросы</h1>
<h1 id="учетная-запись-пользователя">1. Учетная запись пользователя
–</h1>
<p>это необходимая для системы информация о пользователе, хранящаяся в
специальных файлах. Информация используется Linux для аутентификации
пользователя и назначения ему прав доступа. Аутентификация – системная
процедура, позволяющая Linux определить, какой именно пользователь
осуществляет вход. Вся информация о пользователе обычно хранится в
файлах /etc/passwd и /etc/group. Учётная запись пользователя содержит: -
Имя пользователя (user name) - Идентификационный номер пользователя
(UID) - Идентификационный номер группы (GID). - Пароль (password) -
Полное имя (full name) - Домашний каталог (home directory) - Начальную
оболочку (login shell)</p>
<h1 id="команды-терминала">2. Команды терминала:</h1>
<ul>
<li>Для получения справки по команде: man [команда]. Например, команда
«man ls» выведет справку о команде «ls».</li>
<li>Для перемещения по файловой системе: cd [путь]. Например, команда
«cd newdir» осуществляет переход в каталог newdir</li>
<li>Для просмотра содержимого каталога: ls [опции] [путь]. Например,
команда «ls –a ~/newdir» отобразит имена скрытых файлов в каталоге
newdir - Для определения объёма каталога: du [опция] [путь]. Например,
команда «du – k ~/newdir» выведет размер каталога newdir в
килобайтах</li>
<li>Для создания / удаления каталогов / файлов: mkdir [опции] [путь] /
rmdir [опции] [путь] / rm [опции] [путь]. Например, команда «mkdir –p
~/newdir1/newdir2» создаст иерархическую цепочку подкаталогов, создав
каталоги newdir1 и newdir2; команда «rmdir -v ~/newdir» удалит каталог
newdir; команда «rm –r ~/newdir» так же удалит каталог newdir</li>
<li>Для задания определённых прав на файл / каталог: сhmod [опции]
[путь]. Например, команда «сhmod g+r ~/text.txt» даст группе право на
чтение файла text.txt</li>
<li>Для просмотра истории команд: history [опции]. Например, команда
«history 5» покажет список последних 5 команд</li>
</ul>
<h1 id="файловая-система-имеет-два-значения">3. Файловая система имеет
два значения:</h1>
<p>с одной стороны – это архитектура хранения битов на жестком диске, с
другой – это организация каталогов в соответствии с идеологией Unix.
Файловая система (англ. «file system») – это архитектура хранения данных
в системе, хранение данных в оперативной памяти и доступа к конфигурации
ядра. Файловая система устанавливает физическую и логическую структуру
файлов, правила их создания и управления ими. В физическом смысле
файловая система Linux представляет собой пространство раздела диска,
разбитое на блоки фиксированного размера. Их размер кратен размеру
сектора: 1024, 2048, 4096 или 8120 байт. Существует несколько типов
файловых систем: - XFS – начало разработки 1993 год, фирма Silicon
Graphics, в мае 2000 года предстала в GNU GPL, для пользователей
большинства Linux систем стала доступна в 2001-2002 гг. Отличительная
черта системы – прекрасная поддержка больших файлов и файловых томов, 8
эксбибайт (8<em>260 байт) для 64-х битных систем. - ReiserFS (Reiser3) –
одна из первых журналируемых файловых систем под Linux, разработана
Namesys, доступна с 2001 г. Максимальный объём тома для этой системы
равен 16 тебибайт (16</em>240 байт). - JFS (Journaled File System) –
файловая система, детище IBM, явившееся миру в далёком 1990 году для ОС
AIX (Advanced Interactive eXecutive). В виде первого стабильного релиза,
для пользователей Linux, система стала доступна в 2001 году. Из плюсов
системы – хорошая масштабируемость. Из минусов – не особо активная
поддержка на протяжении всего жизненного цикла. Максимальный рамер тома
32 пэбибайта (32<em>250 байт). -ext (extended filesystem) – появилась в
апреле 1992 года, это была первая файловая система, изготовленная
специально под нужды Linux ОС. Разработана Remy Card с целью преодолеть
ограничения файловой системы Minix. - ext2 (second extended file system)
– была разработана Remy Card в 1993 году. Не журналируемая файловая
система, это был основной её недостаток, который исправит ext3. - ext3
(third extended filesystem) – по сути расширение исконной для Linux
ext2, способное к журналированию. Разработана Стивеном Твиди (Stephen
Tweedie) в 1999 году, включена в основное ядро Linux в ноябре 2001 года.
На фоне других своих сослуживцев обладает более скромным размером
пространства, до 4 тебибайт (4</em>240 байт) для 32-х разрядных систем.
На данный момент является наиболее стабильной и поддерживаемой файловой
системой в среде Linux. - ext4 – попытка создать 64-х битную ext3
способную поддерживать больший размер файловой системы (1 эксбибайт).
Позже добавились возможности – непрерывные области дискового
пространства, задержка выделения пространства, онлайн дефрагментация и
прочие. Обеспечивается прямая совместимость с системой ext3 и
ограниченная обратная совместимость при недоступной способности к
непрерывным областям дискового пространства. - Reiser4 – первая попытка
создать файловую систему нового поколения для Linux. Впервые
представленная в 2004 году, система включает в себя такие передовые
технологии как транзакции, задержка выделения пространства, а так же
встроенная возможность кодирования и сжатия данных. Ханс Рейзер (Hans
Reiser) – главный разработчик системы. - Btrfs (B-tree FS или Butter FS)
– проект изначально начатый компанией Oracle, впоследствии поддержанный
большинством Linux систем. Ключевыми особенностями данной файловой
системы являются технологии: copy-on-write, позволяющая сделать снимки
областей диска (снапшоты), которые могут пригодится для последующего
восстановления; контроль за целостностью данных и метаданных (с
повышенной гарантией целостности); сжатие данных; оптимизированный режим
для накопителей SSD (задаётся при монтировании) и прочие. Немаловажным
фактором является возможность перехода с ext3 на Btrfs. С августа 2008
года данная система выпускается под GNU GPL. - Tux2 – известная, но так
и не анонсированная публично файловая система. Создатель Дэниэл Филипс
(Daniel Phillips). Cистема базируется на алгоритме «Фазового Дерева»,
который как и журналирование защищает файловую систему от сбоев.
Организована как надстройка на ext2. - Tux3 – cистема создана на основе
FUSE (Filesystem in Userspace), специального модуля для создания
файловых систем на Unix платформах. Данный проект ставит перед собой
цель избавиться от привычного журналирования, взамен предлагая
версионное восстановление (состояние в определённый промежуток времени).
Преимуществом используемой в данном случае версионной системы, является
способ описания изменений, где для каждого файла создаётся изменённая
копия, а не переписывается текущая версия. - Xiafs – задумка и
разработка данной файловой системы принадлежат Frank Xia, основана на
файловой системе MINIX. В настоящее время считается устаревшей и
практически не используется. Наряду с ext2 разрабатывалась, как замена
системе ext. В декабре 1993 года система была добавлена в стандартное
ядро Linux. И хотя система обладала большей стабильностью и занимала
меньше дискового пространства под контрольные структуры – она оказалась
слабее ext2, ведущую роль сыграли ограничения максимальных размеров
файла и раздела, а так же способность к дальнейшему расширению. - ZFS
(Zettabyte File System) – изначально созданная в Sun Microsystems
файловая система, для небезызвестной операционной системы Solaris в 2005
году. Отличительные особенности – отсутствие фрагментации данных как
таковой, возможности по управлению снапшотами (snapshots), пулами
хранения (storage pools), варьируемый размер блоков, 64-х разрядный
механизм контрольных сумм, а так же способность адресовать 128 бит
информации. В Linux системах может использоваться посредствам FUSE.</p>
<h1
id="команда-findmnt-или-findmnt-all-будет-отображать-все-подмонтированные-файловые-системы-или-искать-файловую-систему.">4.
Команда «findmnt» или «findmnt –all» будет отображать все
подмонтированные файловые системы или искать файловую систему.</h1>
<h1
id="основные-сигналы-каждый-сигнал-имеет-свой-номер-которые-используются-для-завершения-процесса">5.
Основные сигналы (каждый сигнал имеет свой номер), которые используются
для завершения процесса:</h1>
<ul>
<li>SIGINT – самый безобидный сигнал завершения, означает Interrupt. Он
отправляется процессу, запущенному из терминала с помощью сочетания
клавиш Ctrl+C. Процесс правильно завершает все свои действия и
возвращает управление;</li>
<li>SIGQUIT – это еще один сигнал, который отправляется с помощью
сочетания клавиш, программе, запущенной в терминале. Он сообщает ей что
нужно завершиться и программа может выполнить корректное завершение или
проигнорировать сигнал. В отличие от предыдущего, она генерирует дамп
памяти. Сочетание клавиш Ctrl+/;</li>
<li>SIGHUP – сообщает процессу, что соединение с управляющим терминалом
разорвано, отправляется, в основном, системой при разрыве соединения с
интернетом;</li>
<li>SIGTERM – немедленно завершает процесс, но обрабатывается
программой, поэтому позволяет ей завершить дочерние процессы и
освободить все ресурсы;</li>
<li>SIGKILL – тоже немедленно завершает процесс, но, в отличие от
предыдущего варианта, он не передается самому процессу, а обрабатывается
ядром. Поэтому ресурсы и дочерние процессы остаются запущенными. Также
для передачи сигналов процессам в Linux используется утилита kill, её
синтаксис: kill [-сигнал] [pid_процесса] (PID – уникальный идентификатор
процесса). Сигнал представляет собой один из выше перечисленных сигналов
для завершения процесса. Перед тем, как выполнить остановку процесса,
нужно определить его PID. Для этого используют команды ps и grep.
Команда ps предназначена для вывода списка активных процессов в системе
и информации о них. Команда grep запускается одновременно с ps (в
канале) и будет выполнять поиск по результатам команды ps. Утилита pkill
– это оболочка для kill, она ведет себя точно так же, и имеет тот же
синтаксис, только в качестве идентификатора процесса ей нужно передать
его имя. killall работает аналогично двум предыдущим утилитам. Она тоже
принимает имя процесса в качестве параметра и ищет его PID в директории
/proc. Но эта утилита обнаружит все процессы с таким именем и завершит
их.</li>
</ul>
<h1 class="unnumbered" id="список-литературы">Список литературы</h1>
<pre><code>Установка виртуальной машины https://remontka.pro/virtualbox/
Медведовский И.Д., Семьянов П.В., Платонов В.В. Атака через Internet. — НПО &quot;Мир и семья-95&quot;,  1997. — URL: http://bugtraq.ru/library/books/attack1/index.html
Медведовский И.Д., Семьянов П.В., Леонов Д.Г.  Атака на Internet. — Издательство ДМК, 1999. — URL: http://bugtraq.ru/library/books/attack/index.html
Запечников С. В. и др. Информационн~пасность открытых систем. Том 1. — М.: Горячаая линия -Телеком, 2006.</code></pre>
<div id="refs" role="list">

</div>
